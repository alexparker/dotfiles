set softtabstop=2
set shiftwidth=2
set tabstop=2
set expandtab
colorscheme mad_unicorn

nnoremap <silent> - :vert res -5<cr>
nnoremap <silent> + :vert res +5<cr>

let mapleader= ','

set nospell
set signcolumn=yes
set foldmethod=indent
set foldcolumn=0
set foldlevel=99

    " Code folding options
    nmap <leader>f0 :set foldlevel=0<CR>
    nmap <leader>f1 :set foldlevel=1<CR>
    nmap <leader>f2 :set foldlevel=2<CR>
    nmap <leader>f3 :set foldlevel=3<CR>
    nmap <leader>f4 :set foldlevel=4<CR>
    nmap <leader>f5 :set foldlevel=5<CR>
    nmap <leader>f6 :set foldlevel=6<CR>
    nmap <leader>f7 :set foldlevel=7<CR>
    nmap <leader>f8 :set foldlevel=8<CR>
    nmap <leader>f9 :set foldlevel=9<CR>

    " Visual shifting (does not exit Visual mode)
    vnoremap < <gv
    vnoremap > >gv

    " Allow using the repeat operator with a visual selection (!)
    " http://stackoverflow.com/a/8064607/127816
    vnoremap . :normal .<CR>


    map <Leader>= <C-w>=


inoremap <C-P> <Esc>:CtrlP<CR>
nnoremap <leader>b :CtrlPBuffer<CR>

nnoremap <leader><leader>t :!tig<CR>
nnoremap Q :q<CR>
nmap <C-Enter> O<Esc>
nmap <CR> o<Esc>
map <C-J> <C-W>j
map <C-K> <C-W>k
map <C-L> <C-W>l
map <C-H> <C-W>h
inoremap <C-J> <Esc><C-W>j
inoremap <C-K> <Esc><C-W>k
inoremap <C-L> <Esc><C-W>l
inoremap <C-H> <Esc><C-W>h
imap <C-E> <Esc><C-E>

imap jjj <Esc>jjj

" Search for visual selection
vnorem // y/<c-r>"<cr>


" window
nmap <leader>swh  :topleft  vnew<CR>
nmap <leader>swl :botright vnew<CR>
nmap <leader>swk    :topleft  new<CR>
nmap <leader>swj  :botright new<CR>
" buffer
"nmap <leader>sh   :leftabove  vnew<CR>
"nmap <leader>sl  :rightbelow vnew<CR>
"nmap <leader>sk     :leftabove  new<CR>
"nmap <leader>sj   :rightbelow new<CR>

" Set current viewport to full height
nnoremap <leader>_ <C-W>_
" Set current viewport to full width
nnoremap <leader>\| <C-W>\|
" Set current viewport to max view
nnoremap <leader>m <C-W>_ <C-W>\|


" Close a buffer without closing the window(split pane)
  nnoremap gC <C-W>q
  nnoremap gc :bp<bar>sp<bar>bn<bar>bd<CR>
  nnoremap <leader>w :w<CR>
  noremap <C-S> :w<CR>
  nnoremap gn :bn<CR>
  nnoremap gp :bp<CR>

" Fixes clipboard issues for tmux on OSX
  "set clipboard=

" Copy-Paste using <leader>
  " Copy current line
  nnoremap <leader>c "*yy
  " Cut current line
  nnoremap <leader>x "*dd
  " Copy highlighted characters
  vnoremap <leader>c "*y
  " Cut highlighted characters
  vnoremap <leader>x "*d
  " Paste v-register after cursor
  nnoremap <leader>v "*p
  " Paste v-register before cursor
  nnoremap <leader>V "*P

"Duplicate current line below
  nnoremap <leader>dd "dyy"dp

" Insert mode movements
  inoremap II <Esc>I
  inoremap AA <Esc>A
  inoremap KK <Esc>O
  inoremap HH <Esc>
  inoremap JJ <Esc>o

autocmd BufWritePre * :%s/\s\+$//e

augroup CursorLine
    au!
    au VimEnter * setlocal cursorline
    au WinEnter * setlocal cursorline
    au BufWinEnter * setlocal cursorline
    au WinLeave * setlocal nocursorline
augroup END


if version >= 700
  au InsertLeave * hi CursorLine ctermfg=NONE ctermbg=237 cterm=none guifg=NONE guibg=NONE gui=NONE
  au InsertEnter * hi CursorLine ctermfg=NONE ctermbg=233 cterm=NONE guifg=NONE guibg=NONE gui=NONE
endif

" Source Vimrca
  nmap <leader><leader>so :so $MYVIMRC

  function! SelectIndent ()
    let temp_var=indent(line("."))
  while indent(line(".")-1) >= temp_var
    exe "normal k"
  endwhile
  exe "normal V"
  while indent(line(".")+1) >= temp_var
    exe "normal j"
  endwhile
endfun
nmap <Space> :call SelectIndent()<CR>

map <F10> :echo "hi<" . synIDattr(synID(line("."),col("."),1),"name") . '> trans<'
      \ . synIDattr(synID(line("."),col("."),0),"name") . "> lo<"
      \ . synIDattr(synIDtrans(synID(line("."),col("."),1)),"name") . ">"<CR>

let g:gist_post_private=1

iabbr rpry require 'pry-remote'; binding.remote_pry;
iabbr brpy require 'pry'; binding.pry;
